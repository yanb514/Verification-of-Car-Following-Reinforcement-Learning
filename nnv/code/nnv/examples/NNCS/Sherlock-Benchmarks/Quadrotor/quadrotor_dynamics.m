function [dx]= quadrotor_dynamics(t,x,control_input)

% see paper: Reachability Analysis for Neural Feedback Systems using
% Regressive Polynomial Rule Inference, Souradeep, HSCC 2019

% x1 = p_n
% x2 = p_e
% x3 = h
% x4 = u
% x5 = v
% x6 = w
% x7 = q0
% x8 = q1
% x9 = q2
% x10 = q3
% x11 = p
% x12 = q
% x13 = r
% x14 = p_I
% x15 = q_I
% x16 = r_I
% x17 = h_I


dx(1,1)= 2 * x(4) * (x(7)^2 + x(8)^2 - 0.5) - 2 * x(5) * (x(7) * x(10) - x(8) * x(9)) + 2 * x(6) * (x(7) * x(9) + x(8) * x(10));
dx(2,1)= 2 * x(5) * (x(7)^2 + x(9)^2 - 0.5) + 2 * x(4) * (x(7) * x(10) + x(8) * x(9)) - 2 * x(6) * (x(7) * x(8) - x(9) * x(10));
dx(3,1)= 2 * x(6) * (x(7)^2 + x(10)^2 - 0.5) - 2 * x(4) * (x(7) * x(9) - x(8) * x(10)) + 2 * x(5) * (x(7) * x(8) + x(9) * x(10));
dx(4,1)= x(13) * x(5) - x(12) * x(6) - 11.62 * (x(7) * x(9) - x(8) * x(10));
dx(5,1)= x(11) * x(6) - x(13) * x(4) + 11.62 * (x(7) * x(8) + x(9) * x(10));
dx(6,1)= x(12) * x(4) - x(11) * x(5) + 11.62 * (x(7)^2 + x(10)^2 - 0.5) + control_input;
dx(7,1)= -0.5 * x(8) * x(11) - 0.5 * x(9) * x(12) - 0.5 * x(10) * x(13);
dx(8,1)= 0.5 * x(7) * x(11) - 0.5 * x(10) * x(12) + 0.5 * x(9) * x(13);
dx(9,1)= 0.5 * x(10) * x(11) + 0.5 * x(7) * x(12) - 0.5 * x(8) * x(13);
dx(10,1)= 0.5 * x(8) * x(12) - 0.5 * x(9) * x(11) + 0.5 * x(7) * x(13);
dx(11,1)= (-40.000632584 * x(14) - 2.828397982954 * x(11)) - 1.133407423682 * x(12) * x(13);
dx(12,1)= (-39.999804525 * x(15) - 2.8283752541008 * x(12)) - 1.132078179614 * x(11) * x(13);
dx(13,1)= (-39.999789097 * x(16) - 2.8284134223281 * x(13)) - 0.004695219978 * x(11) * x(12);
dx(14,1)= x(11);
dx(15,1)= x(12);
dx(16,1)= x(13);
dx(17,1)= x(3);


